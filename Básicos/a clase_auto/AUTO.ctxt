#BlueJ class context
comment0.target=AUTO
comment1.params=modelo\ marca\ color
comment1.target=AUTO(java.lang.String,\ java.lang.String,\ java.lang.String)
comment10.params=
comment10.target=void\ apagarLuces()
comment11.params=nuevaVelocidad
comment11.target=void\ cambiarVelocidad(int)
comment11.text=/\r\n\ \ Controlar\:\r\n\ \ \u2022\ el\ auto\ debe\ estar\ encendido\r\n\ \ \u2022\ no\ puede\ pasar\ la\ velocidad_maxima\r\n\ \ \u2022\ si\ baja\ la\ velocidad,\ la\ velocidad\ m\u00EDnima\ es\ cero.\r\n
comment12.params=setvelocidad_marcha
comment12.target=void\ setVelocidadMarcha(int)
comment12.text=/\r\nCambiar\ la\ velocidad\ de\ marcha\r\n
comment13.params=
comment13.target=void\ Frenar()
comment13.text=/\r\n\ \ Frenar\:\ debe\ poner\ la\ velocidad\ de\ marcha\ en\ cero\r\n
comment14.params=
comment14.target=void\ informeAuto()
comment14.text=/\r\n\ \ 9.\ informeAuto\:\ debe\ informar\ el\ estado\ general\ del\ auto\ diciendo\:\r\no\ Si\ el\ auto\ esta\ apagado,\ debe\ informar\:\ \u201Cel\ auto\ se\ encuentra\ apagado\u201D\ y\ si\r\nlas\ luces\ est\u00E1n\ encendidas,\ el\ estado\ de\ las\ luces.\ \u201Clas\ luces\ altas/bajas\ est\u00E1n\r\nencendidas\u201D\r\no\ Si\ el\ auto\ esta\ encuentra\ encendido\:\ debe\ informar\r\n\u25AA\ La\ velocidad\ de\ marcha\r\n\u25AA\ Las\ luces\ que\ se\ encuentran\ encendidas\:\ altas,\ bajas\ o\ ningunas\r\n\u25AA\ La\ velocidad\ m\u00E1xima\ del\ auto\ \r\n
comment2.params=
comment2.target=java.lang.String\ getModelo()
comment3.params=
comment3.target=java.lang.String\ getMarca()
comment4.params=
comment4.target=java.lang.String\ getColor()
comment5.params=setvelocidadMaxima
comment5.target=void\ setVelocidadMaxima(int)
comment6.params=
comment6.target=void\ encenderMotor()
comment7.params=
comment7.target=void\ apagarMotor()
comment8.params=
comment8.target=void\ encenderLucesBajas()
comment9.params=
comment9.target=void\ encenderLucesAltas()
numComments=15
